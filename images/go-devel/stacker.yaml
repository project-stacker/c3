config:
  prerequisites:
    - ../build-env/stacker.yaml

build-go-devel:
  from:
    type: built
    tag: build-env
  import:
    - ../../pkgmgr
  run: |
    export DISTRO=${{DISTRO}}
    export DISTRO_REL=${{DISTRO_REL}}
    export ARCH=${{ARCH}}
    export OS=${{OS}}
    # golang
    export GOLANG=${{GOLANG}}
    export GOLANG_DLV=${{GOLANG_DLV}}
    export GOLANG_LINTER=${{GOLANG_LINTER}}
    # source pkgmgr func defs
    . /stacker/pkgmgr/defs.sh

    # install go for cross compilation in the build environment
    dldir=$(mktemp -d ${TMPDIR:-/tmp}/XXXXXX)
    wget -N https://go.dev/dl/go${GOLANG}.${OS}-amd64.tar.gz -O $dldir/golang.tar.gz
    echo "${{GOLANG_HASH_AMD64}} $dldir/golang.tar.gz" > SHA256SUMS
    sha256sum -c SHA256SUMS
    rm SHA256SUMS
    tar xvzf $dldir/golang.tar.gz -C /opt/
    export GOROOT=/opt/go
    export PATH=$GOROOT/bin:$PATH
    mkdir -p /go
    export GOPATH=/go
    export PATH=$GOPATH/bin:$PATH
    export GOCACHE=/go/cache

    # prepare the rootfs
    mkdir -p /rootfs_diff/opt

    # install go and other tools as needed in the final image
    dldir=$(mktemp -d ${TMPDIR:-/tmp}/XXXXXX)
    wget -N https://go.dev/dl/go${GOLANG}.${OS}-${ARCH}.tar.gz -O $dldir/golang.tar.gz
    echo "${{GOLANG_HASH}}  $dldir/golang.tar.gz" > SHA256SUMS
    sha256sum -c SHA256SUMS
    tar xzvf $dldir/golang.tar.gz -C /rootfs_diff/opt/

    # install golangci-lint
    linter_ver=$(echo ${GOLANG_LINTER} | cut -c2-)
    wget -N https://github.com/golangci/golangci-lint/releases/download/${GOLANG_LINTER}/golangci-lint-${linter_ver}-linux-${ARCH}.tar.gz -O $dldir/golangci-lint.tar.gz
    tar -xzvf $dldir/golangci-lint.tar.gz --strip-components=1
    mv golangci-lint /rootfs_diff/opt/go/bin/

    # build dlv debugger
    GOOS=linux GOARCH=${ARCH} go install github.com/go-delve/delve/cmd/dlv@${GOLANG_DLV}
    ls -l $GOPATH/bin/
    if [ "${ARCH}" = "amd64" ] ; then
      cp $GOPATH/bin/dlv /rootfs_diff/opt/go/bin/
    else
      cp $GOPATH/bin/linux_${ARCH}/dlv /rootfs_diff/opt/go/bin/
    fi

    # set the new profile/environment variables
    mkdir -p /rootfs_diff/etc/
    echo 'export HOME=/go' > /rootfs_diff/etc/profile
    echo 'export GOROOT=/opt/go' >> /rootfs_diff/etc/profile
    echo 'export PATH=$GOROOT/bin:$PATH' >> /rootfs_diff/etc/profile
    echo 'mkdir -p /tmp/go/cache'  >> /rootfs_diff/etc/profile
    echo 'export GOCACHE=/tmp/go/cache' >> /rootfs_diff/etc/profile

    # cleanup unnecessary files
    cleanup_rootfs /rootfs_diff
  build_only: true

go-devel-${{ARCH}}:
  from:
    type: oci
    url: ${{BUILD_OCI_DIR}}:base-devel-${{ARCH}}${{LAYER_SUFFIX}}
  import:
    - path: stacker://build-go-devel/rootfs_diff/
      dest: /
    - ../../pkgmgr # The import purpose is to force a rebuild if file changed
  full_command: "/bin/sh -l"
  annotations:
    org.opencontainers.image.title: go-devel-${{ARCH}}
    org.opencontainers.image.description: ${{DESCRIPTION}}
    org.opencontainers.image.url: https://github.com/project-stacker/c3
    org.opencontainers.image.source: https://github.com/project-stacker/c3
    org.opencontainers.image.version: ${{GOLANG}}
    org.opencontainers.image.revision: ${{REVISION}}
    org.opencontainers.image.licenses: ${{LICENSES}}
    org.opencontainers.image.vendor: Cisco Systems, Inc.
