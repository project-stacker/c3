on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  pull_request_target:
    branches:
      - main
  release:
    types:
      - published
name: build

permissions: read-all

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 2
      matrix:
        os:
          - linux
        arch:
          - amd64
        distro:
          - debian-bullseye
          - ubuntu-jammy
          - rockylinux-9
        image:
          - static
          - base
          - go-devel
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
      - name: Setup env vars
        run: |
          cat config.mk | sed /^#.*$/d | sed s/\?=/=/g | sed s/#.*$//g | egrep -v "COMMIT|MAKE|DISTRO" > $GITHUB_ENV
          distro=${{ matrix.distro }}
          x=$(echo $distro | tr '-' ' ')
          DISTRO=$(echo $x| awk '{print $1}')
          echo DISTRO=$DISTRO >> $GITHUB_ENV
          DISTRO_REL=$(echo $x| awk '{print $2}')
          echo DISTRO_REL=$DISTRO_REL >> $GITHUB_ENV
          # build image tag
          cat config.mk | sed /^#.*$/d | sed s/\?=/=/g | sed s/#.*$//g | egrep -v "COMMIT|MAKE|DISTRO" > config.vars
          cat ./config.vars
          source ./config.vars
          if [ "${{ matrix.image }}" = "static" ] || [ "${{ matrix.image }}" = "base" ]; then
            TAG=$DISTRO_REL
          elif [ "${{ matrix.image }}" == "go-devel" ]; then
            TAG=$GOLANG
          else
            exit 1
          fi
          SHA=${{ github.sha }}
          echo SHA=$SHA >> $GITHUB_ENV
          echo IMAGE=${{ matrix.image }}-$DISTRO-${{ matrix.arch }} >> $GITHUB_ENV
          IMAGE_TAG=$TAG-${SHA::7}
          echo IMAGE_TAG=$IMAGE_TAG
          echo IMAGE_TAG=$IMAGE_TAG >> $GITHUB_ENV
      - name: Run zot container image with podman
        run: |
          podman run -d -p 5000:5000 ghcr.io/project-zot/zot-linux-amd64:latest
      - name: Build container images
        uses: project-stacker/stacker-build-push-action@main
        with:
          file: images/${{ matrix.image }}/stacker.yaml
          build-args: |
            COMMIT=${{ github.sha }}
            OS=${{ matrix.os }}
            ARCH=${{ matrix.arch }}
            DISTRO=${{ env.DISTRO }}
            DISTRO_REL=${{ env.DISTRO_REL }}
            BUSYBOX=${{ env.BUSYBOX }}
            GOLANG=${{ env.GOLANG }}
            GOLANG_DLV=${{ env.GOLANG_DLV }}
            GOLANG_LINTER=${{ env.GOLANG_LINTER }}
          url: docker://localhost:5000/${{ github.repository_owner }}/c3
          tags: ${{ env.IMAGE_TAG }}
          skip-tls: true
  release:
    name: Release
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    env:
      DOCKER_CONFIG: $HOME/.docker
    strategy:
      max-parallel: 2
      matrix:
        os:
          - linux
        arch:
          - amd64
        distro:
          - debian-bullseye
          - ubuntu-jammy
          - rockylinux-9
        image:
          - static
          - base
          - go-devel
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
      - name: Setup env vars
        run: |
          cat config.mk | sed /^#.*$/d | sed s/\?=/=/g | sed s/#.*$//g | egrep -v "COMMIT|MAKE|DISTRO" > $GITHUB_ENV
          distro=${{ matrix.distro }}
          x=$(echo $distro | tr '-' ' ')
          DISTRO=$(echo $x| awk '{print $1}')
          echo DISTRO=$DISTRO >> $GITHUB_ENV
          DISTRO_REL=$(echo $x| awk '{print $2}')
          echo DISTRO_REL=$DISTRO_REL >> $GITHUB_ENV
          # build image tag
          cat config.mk | sed /^#.*$/d | sed s/\?=/=/g | sed s/#.*$//g | egrep -v "COMMIT|MAKE|DISTRO" > config.vars
          cat ./config.vars
          source ./config.vars
          if [ "${{ matrix.image }}" = "static" ] || [ "${{ matrix.image }}" = "base" ]; then
            TAG=$DISTRO_REL
          elif [ "${{ matrix.image }}" == "go-devel" ]; then
            TAG=$GOLANG
          else
            exit 1
          fi
          SHA=${{ github.sha }}
          echo SHA=$SHA >> $GITHUB_ENV
          echo IMAGE=${{ matrix.image }}-$DISTRO-${{ matrix.arch }} >> $GITHUB_ENV
          IMAGE_TAG=$TAG
          echo IMAGE_TAG=$IMAGE_TAG >> $GITHUB_ENV
      - name: Install go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          check-latest: true
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: main
      - name: Check cosign install!
        run: cosign version
      - name: Publish container images to zothub.io
        uses: project-stacker/stacker-build-push-action@main
        with:
          file: images/${{ matrix.image }}/stacker.yaml
          build-args: |
            COMMIT=${{ github.sha }}
            OS=${{ matrix.os }}
            ARCH=${{ matrix.arch }}
            DISTRO=${{ env.DISTRO }}
            DISTRO_REL=${{ env.DISTRO_REL }}
            BUSYBOX=${{ env.BUSYBOX }}
            GOLANG=${{ env.GOLANG }}
            GOLANG_DLV=${{ env.GOLANG_DLV }}
            GOLANG_LINTER=${{ env.GOLANG_LINTER }}
          url: docker://zothub.io/${{ github.repository_owner }}/c3
          tags: ${{ env.IMAGE_TAG }}
          username: ${{ secrets.ZOTHUB_USERNAME }}
          password: ${{ secrets.ZOTHUB_PASSWORD }}
      - name: Login to zothub.io Registry
        uses: docker/login-action@v2
        with:
          registry: zothub.io
          username: ${{ secrets.ZOTHUB_USERNAME }}
          password: ${{ secrets.ZOTHUB_PASSWORD }}
      - name: Sign image with a key
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY zothub.io/${{ github.repository_owner }}/c3/${{ env.IMAGE }}:${TAGS}
        env:
          TAGS: ${{ env.IMAGE_TAG }}
          COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
